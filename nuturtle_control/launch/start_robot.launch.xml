<launch>
    <arg name="cmd_src" default="none" description="Lets the user set it to 'circle' to start the circle node, 'teleop' to start the teleop_twist_keyboard, and 'none' to start nothing"/>
    <arg name="robot" default="nusim" description="Lets the user set it to 'nusim' to start the nusim simulator, 'localhost' to run the nodes directly from the turtlebot3, and 'none' to not launch any additional nodes"/>
    <arg name="use_rviz" default="true" description="Determines whether or not to launch rviz with a configuration that enables seeing the robot model, tf frames, and the odometry"/>
    <arg name="body_id" default="blue/base_footprint" description="The name of the body frame of the robot"/>
    <arg name="odom_id" default="odom" description="The name of the odometry frame"/>
    <arg name="wheel_left" default="wheel_left_joint" description="The name of the left wheel joint"/>
    <arg name="wheel_right" default="wheel_right_joint" description="The name of the right wheel joint"/>

    <node pkg="numsr_turtlebot" exec="numsr_turtlebot" name="numsr_turtlebot" if="$(eval '\'$(var robot)\' == \'localhost\'')"/>

    <node pkg="nuturtle_control" exec="turtle_control" name="turtle_control" if="$(eval '\'$(var robot)\' != \'localhost\'')">
        <param from="$(find-pkg-share nuturtle_description)/config/diff_params.yaml"/>
        <remap from="/wheel_cmd" to="red/wheel_cmd"/>
        <remap from="/sensor_data" to="red/sensor_data"/>
        <remap from="/joint_states" to="blue/joint_states"/>
    </node>
    
    <node pkg="nuturtle_control" exec="turtle_control" name="turtle_control" if="$(eval '\'$(var robot)\' == \'localhost\'')">
        <param from="$(find-pkg-share nuturtle_description)/config/diff_params.yaml"/>
        <remap from="/joint_states" to="blue/joint_states"/>
    </node>

    <node pkg="nuturtle_control" exec="odometry" name="odometry">
        <param from="$(find-pkg-share nuturtle_description)/config/diff_params.yaml"/>
        <param name="body_id" value="$(var body_id)"/>
        <param name="odom_id" value="$(var odom_id)"/>
        <param name="wheel_left" value="$(var wheel_left)"/>
        <param name="wheel_right" value="$(var wheel_right)"/>
        <remap from="/joint_states" to="blue/joint_states"/>
    </node>

    <node pkg="nuturtle_control" exec="circle" name="circle" if="$(eval '\'$(var cmd_src)\' == \'circle\'')"/>

    <node pkg="teleop_twist_keyboard" exec="teleop_twist_keyboard" name="teleop" output="screen" launch-prefix="xterm -e" if="$(eval '\'$(var cmd_src)\' == \'teleop\'')"/>

    <include file="$(find-pkg-share nusim)/launch/nusim.launch.xml" if="$(eval '\'$(var robot)\' == \'nusim\'')">
        <arg name="rviz_file" value="$(find-pkg-share nuturtle_control)/config/nuturtle_control_blue_red.rviz"/>
    </include>
    
    <node pkg="rviz2" exec="rviz2" name="rviz2" args="-d $(find-pkg-share nuturtle_control)/config/nuturtle_control.rviz" if="$(eval '\'$(var robot)\' != \'localhost\' and \'$(var use_rviz)\' == \'true\' and \'$(var robot)\' != \'nusim\'')"/>

    <include file="$(find-pkg-share nuturtle_description)/launch/load_one.launch.py">
    <!-- <include file="$(find-pkg-share nuturtle_description)/launch/load_one.launch.py" if="$(eval '\'$(var robot)\' == \'nusim\'')"> -->
        <arg name="color" value="blue"/>
        <arg name="use_rviz" value="false"/>
        <arg name="use_jsp" value="false"/>
    </include>

    <node pkg="tf2_ros" exec="static_transform_publisher" name="world_to_odom" args="0 0 0 0 0 0 1 nusim/world odom"/>
</launch>